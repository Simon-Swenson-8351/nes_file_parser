#ifndef MOS_6502_ISA_H
#define MOS_6502_ISA_H

// Created with documentation provided at:
// https://www.masswerk.at/6502/6502_instruction_set.html
typedef enum mos_6502_isa_addr_mode
{
    MOS_6502_ISA_ADDR_MODE_ACCUMULATOR,
    MOS_6502_ISA_ADDR_MODE_ABSOLUTE,
    MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX,
    MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX,
    MOS_6502_ISA_ADDR_MODE_IMMEDIATE,
    MOS_6502_ISA_ADDR_MODE_IMPLIED,
    MOS_6502_ISA_ADDR_MODE_INDIRECT,
    MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT,
    MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX,
    MOS_6502_ISA_ADDR_MODE_RELATIVE,
    MOS_6502_ISA_ADDR_MODE_ZEROPAGE,
    MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX,
    MOS_6502_ISA_ADDR_MODE_ZEROPAGE_YINDEX,
    MOS_6502_ISA_ADDR_MODE_UNUSED
} mos_6502_isa_addr_mode_t;
const size_t MOS_6502_ISA_ADDR_MODE_BYTES[] =
{
    1,
    3,
    3,
    3,
    2,
    1,
    3,
    2,
    2,
    2,
    2,
    2,
    2,
    0
};

typedef enum mos_6502_isa_instr
{
    MOS_6502_ISA_INSTR_ADC,
    MOS_6502_ISA_INSTR_AND,
    MOS_6502_ISA_INSTR_ASL,
    MOS_6502_ISA_INSTR_BCC,
    MOS_6502_ISA_INSTR_BCS,
    MOS_6502_ISA_INSTR_BEQ,
    MOS_6502_ISA_INSTR_BIT,
    MOS_6502_ISA_INSTR_BMI,
    MOS_6502_ISA_INSTR_BNE,
    MOS_6502_ISA_INSTR_BPL,
    MOS_6502_ISA_INSTR_BRK,
    MOS_6502_ISA_INSTR_BVC,
    MOS_6502_ISA_INSTR_BVS,
    MOS_6502_ISA_INSTR_CLC,
    MOS_6502_ISA_INSTR_CLD,
    MOS_6502_ISA_INSTR_CLI,
    MOS_6502_ISA_INSTR_CLV,
    MOS_6502_ISA_INSTR_CMP,
    MOS_6502_ISA_INSTR_CPX,
    MOS_6502_ISA_INSTR_CPY,
    MOS_6502_ISA_INSTR_DEC,
    MOS_6502_ISA_INSTR_DEX,
    MOS_6502_ISA_INSTR_DEY,
    MOS_6502_ISA_INSTR_EOR,
    MOS_6502_ISA_INSTR_INC,
    MOS_6502_ISA_INSTR_INX,
    MOS_6502_ISA_INSTR_INY,
    MOS_6502_ISA_INSTR_JMP,
    MOS_6502_ISA_INSTR_JSR,
    MOS_6502_ISA_INSTR_LDA,
    MOS_6502_ISA_INSTR_LDX,
    MOS_6502_ISA_INSTR_LDY,
    MOS_6502_ISA_INSTR_LSR,
    MOS_6502_ISA_INSTR_NOP,
    MOS_6502_ISA_INSTR_ORA,
    MOS_6502_ISA_INSTR_PHA,
    MOS_6502_ISA_INSTR_PHP,
    MOS_6502_ISA_INSTR_PLA,
    MOS_6502_ISA_INSTR_PLP,
    MOS_6502_ISA_INSTR_ROL,
    MOS_6502_ISA_INSTR_ROR,
    MOS_6502_ISA_INSTR_RTI,
    MOS_6502_ISA_INSTR_RTS,
    MOS_6502_ISA_INSTR_SBC,
    MOS_6502_ISA_INSTR_SEC,
    MOS_6502_ISA_INSTR_SED,
    MOS_6502_ISA_INSTR_SEI,
    MOS_6502_ISA_INSTR_STA,
    MOS_6502_ISA_INSTR_STX,
    MOS_6502_ISA_INSTR_STY,
    MOS_6502_ISA_INSTR_TAX,
    MOS_6502_ISA_INSTR_TAY,
    MOS_6502_ISA_INSTR_TSX,
    MOS_6502_ISA_INSTR_TXA,
    MOS_6502_ISA_INSTR_TXS,
    MOS_6502_ISA_INSTR_TYA,
    MOS_6502_ISA_INSTR_UNUSED
} mos_6502_isa_instr_t;
const char *MOS_6502_ISA_INSTR_MNEM[] =
{
    "adc",
    "and",
    "asl",
    "bcc",
    "bcs",
    "beq",
    "bit",
    "bmi",
    "bne",
    "bpl",
    "brk",
    "bvc",
    "bvs",
    "clc",
    "cld",
    "cli",
    "clv",
    "cmp",
    "cpx",
    "cpy",
    "dec",
    "dex",
    "dey",
    "eor",
    "inc",
    "inx",
    "iny",
    "jmp",
    "jsr",
    "lda",
    "ldx",
    "ldy",
    "lsr",
    "nop",
    "ora",
    "pha",
    "php",
    "pla",
    "plp",
    "rol",
    "ror",
    "rti",
    "rts",
    "sbc",
    "sec",
    "sed",
    "sei",
    "sta",
    "stx",
    "sty",
    "tax",
    "tay",
    "tsx",
    "txa",
    "txs",
    "tya",
    "unused"
};
const char *MOS_6502_ISA_INSTR_STR[] =
{
    "add with carry",
    "and (with accumulator)",
    "arithmetic shift left",
    "branch on carry clear",
    "branch on carry set",
    "branch on equal (zero set)",
    "bit test",
    "branch on minus (negative set)",
    "branch on not equal (zero clear)",
    "branch on plus (negative clear)",
    "break / interrupt",
    "branch on overflow clear",
    "branch on overflow set",
    "clear carry",
    "clear decimal",
    "clear interrupt disable",
    "clear overflow",
    "compare (with accumulator)",
    "compare with X",
    "compare with Y",
    "decrement",
    "decrement X",
    "decrement Y",
    "exclusive or (with accumulator)",
    "increment",
    "increment X",
    "increment Y",
    "jump",
    "jump subroutine",
    "load accumulator",
    "load X",
    "load Y",
    "logical shift right",
    "no operation",
    "or with accumulator",
    "push accumulator",
    "push processor status (SR)",
    "pull accumulator",
    "pull processor status",
    "rotate left",
    "rotate right",
    "return from interrupt",
    "return from subroutine",
    "subtract with carry",
    "set carry",
    "set decimal",
    "set interrupt disable",
    "store accumulator",
    "store X",
    "store Y",
    "transfer accumulator to X",
    "transfer accumulator to Y",
    "transfer stack pointer to X",
    "transfer X to accumulator",
    "transfer X to stack pointer",
    "transfer Y to accumulator",
    "unused"
};

typedef struct mos_6502_isa_opcode
{
    uint8_t opcode;
    mos_6502_isa_instr_t instr;
    mos_6502_isa_addr_mode_t addr_mode;
} mos_6502_isa_opcode_t;

const mos_6502_isa_opcode_t mos_6502_isa_opcode_tbl[] =
{
    { .opcode = 0x00, .instr = MOS_6502_ISA_INSTR_BRK,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x01, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0x02, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x03, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x04, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x05, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x06, .instr = MOS_6502_ISA_INSTR_ASL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x07, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x08, .instr = MOS_6502_ISA_INSTR_PHP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x09, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0x0A, .instr = MOS_6502_ISA_INSTR_ASL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ACCUMULATOR     },
    { .opcode = 0x0B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x0C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x0D, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x0E, .instr = MOS_6502_ISA_INSTR_ASL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x0F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x10, .instr = MOS_6502_ISA_INSTR_BPL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0x11, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0x12, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x13, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x14, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x15, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x16, .instr = MOS_6502_ISA_INSTR_ASL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x17, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x18, .instr = MOS_6502_ISA_INSTR_CLC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x19, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0x1A, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x1B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x1C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x1D, .instr = MOS_6502_ISA_INSTR_ORA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x1E, .instr = MOS_6502_ISA_INSTR_ASL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x1F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x20, .instr = MOS_6502_ISA_INSTR_JSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x21, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0x22, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x23, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x24, .instr = MOS_6502_ISA_INSTR_BIT,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x25, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x26, .instr = MOS_6502_ISA_INSTR_ROL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x27, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x28, .instr = MOS_6502_ISA_INSTR_PLP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x29, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0x2A, .instr = MOS_6502_ISA_INSTR_ROL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ACCUMULATOR     },
    { .opcode = 0x2B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x2C, .instr = MOS_6502_ISA_INSTR_BIT,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x2D, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x2E, .instr = MOS_6502_ISA_INSTR_ROL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x2F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x30, .instr = MOS_6502_ISA_INSTR_BMI,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0x31, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0x32, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x33, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x34, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x35, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x36, .instr = MOS_6502_ISA_INSTR_ROL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x37, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x38, .instr = MOS_6502_ISA_INSTR_SEC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x39, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0x3A, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x3B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x3C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x3D, .instr = MOS_6502_ISA_INSTR_AND,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x3E, .instr = MOS_6502_ISA_INSTR_ROL,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x3F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x40, .instr = MOS_6502_ISA_INSTR_RTI,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x41, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0x42, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x43, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x44, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x45, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x46, .instr = MOS_6502_ISA_INSTR_LSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x47, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x48, .instr = MOS_6502_ISA_INSTR_PHA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x49, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0x4A, .instr = MOS_6502_ISA_INSTR_LSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ACCUMULATOR     },
    { .opcode = 0x4B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x4C, .instr = MOS_6502_ISA_INSTR_JMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x4D, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x4E, .instr = MOS_6502_ISA_INSTR_LSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x4F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x50, .instr = MOS_6502_ISA_INSTR_BVC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0x51, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0x52, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x53, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x54, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x55, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x56, .instr = MOS_6502_ISA_INSTR_LSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x57, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x58, .instr = MOS_6502_ISA_INSTR_CLI,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x59, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0x5A, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x5B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x5C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x5D, .instr = MOS_6502_ISA_INSTR_EOR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x5E, .instr = MOS_6502_ISA_INSTR_LSR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x5F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x60, .instr = MOS_6502_ISA_INSTR_RTS,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x61, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0x62, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x63, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x64, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x65, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x66, .instr = MOS_6502_ISA_INSTR_ROR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x67, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x68, .instr = MOS_6502_ISA_INSTR_PLA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x69, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0x6A, .instr = MOS_6502_ISA_INSTR_ROR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ACCUMULATOR     },
    { .opcode = 0x6B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x6C, .instr = MOS_6502_ISA_INSTR_JMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT        },
    { .opcode = 0x6D, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x6E, .instr = MOS_6502_ISA_INSTR_ROR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x6F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x70, .instr = MOS_6502_ISA_INSTR_BVS,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0x71, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0x72, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x73, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x74, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x75, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x76, .instr = MOS_6502_ISA_INSTR_ROR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x77, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x78, .instr = MOS_6502_ISA_INSTR_SEI,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x79, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0x7A, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x7B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x7C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x7D, .instr = MOS_6502_ISA_INSTR_ADC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x7E, .instr = MOS_6502_ISA_INSTR_ROR,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x7F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x80, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x81, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0x82, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x83, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x84, .instr = MOS_6502_ISA_INSTR_STY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x85, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x86, .instr = MOS_6502_ISA_INSTR_STX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0x87, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x88, .instr = MOS_6502_ISA_INSTR_DEY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x89, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x8A, .instr = MOS_6502_ISA_INSTR_TAX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x8B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x8C, .instr = MOS_6502_ISA_INSTR_STY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x8D, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x8E, .instr = MOS_6502_ISA_INSTR_STX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0x8F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0x90, .instr = MOS_6502_ISA_INSTR_BCC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0x91, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0x92, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x93, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x94, .instr = MOS_6502_ISA_INSTR_STY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x95, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0x96, .instr = MOS_6502_ISA_INSTR_STX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_YINDEX },
    { .opcode = 0x97, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x98, .instr = MOS_6502_ISA_INSTR_TYA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x99, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0x9A, .instr = MOS_6502_ISA_INSTR_TXS,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0x9B, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x9C, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x9D, .instr = MOS_6502_ISA_INSTR_STA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0x9E, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0x9F, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xA0, .instr = MOS_6502_ISA_INSTR_LDY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xA1, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0xA2, .instr = MOS_6502_ISA_INSTR_LDX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xA3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xA4, .instr = MOS_6502_ISA_INSTR_LDY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xA5, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xA6, .instr = MOS_6502_ISA_INSTR_LDX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xA7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xA8, .instr = MOS_6502_ISA_INSTR_TAY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xA9, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xAA, .instr = MOS_6502_ISA_INSTR_TAX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xAB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xAC, .instr = MOS_6502_ISA_INSTR_LDY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xAD, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xAE, .instr = MOS_6502_ISA_INSTR_LDX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xAF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xB0, .instr = MOS_6502_ISA_INSTR_BCS,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0xB1, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0xB2, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xB3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xB4, .instr = MOS_6502_ISA_INSTR_LDY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xB5, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xB6, .instr = MOS_6502_ISA_INSTR_LDX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_YINDEX },
    { .opcode = 0xB7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xB8, .instr = MOS_6502_ISA_INSTR_CLV,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xB9, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0xBA, .instr = MOS_6502_ISA_INSTR_TSX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xBB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xBC, .instr = MOS_6502_ISA_INSTR_LDY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xBD, .instr = MOS_6502_ISA_INSTR_LDA,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xBE, .instr = MOS_6502_ISA_INSTR_LDX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0xBF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xC0, .instr = MOS_6502_ISA_INSTR_CPY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xC1, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0xC2, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xC3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xC4, .instr = MOS_6502_ISA_INSTR_CPY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xC5, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xC6, .instr = MOS_6502_ISA_INSTR_DEC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xC7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xC8, .instr = MOS_6502_ISA_INSTR_INY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xC9, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xCA, .instr = MOS_6502_ISA_INSTR_DEX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xCB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xCC, .instr = MOS_6502_ISA_INSTR_CPY,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xCD, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xCE, .instr = MOS_6502_ISA_INSTR_DEC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xCF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xD0, .instr = MOS_6502_ISA_INSTR_BNE,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0xD1, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0xD2, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xD3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xD4, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xD5, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xD6, .instr = MOS_6502_ISA_INSTR_DEC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xD7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xD8, .instr = MOS_6502_ISA_INSTR_CLD,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xD9, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0xDA, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xDB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xDC, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xDD, .instr = MOS_6502_ISA_INSTR_CMP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xDE, .instr = MOS_6502_ISA_INSTR_DEC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xDF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xE0, .instr = MOS_6502_ISA_INSTR_CPX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xE1, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_XINDEX_INDIRECT },
    { .opcode = 0xE2, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xE3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xE4, .instr = MOS_6502_ISA_INSTR_CPX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xE5, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xE6, .instr = MOS_6502_ISA_INSTR_INC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE        },
    { .opcode = 0xE7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xE8, .instr = MOS_6502_ISA_INSTR_INX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xE9, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMMEDIATE       },
    { .opcode = 0xEA, .instr = MOS_6502_ISA_INSTR_NOP,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xEB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xEC, .instr = MOS_6502_ISA_INSTR_CPX,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xED, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xEE, .instr = MOS_6502_ISA_INSTR_INC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE        },
    { .opcode = 0xEF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },

    { .opcode = 0xF0, .instr = MOS_6502_ISA_INSTR_BEQ,    .addr_mode = MOS_6502_ISA_ADDR_MODE_RELATIVE        },
    { .opcode = 0xF1, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_INDIRECT_YINDEX },
    { .opcode = 0xF2, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xF3, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xF4, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xF5, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xF6, .instr = MOS_6502_ISA_INSTR_INC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ZEROPAGE_XINDEX },
    { .opcode = 0xF7, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xF8, .instr = MOS_6502_ISA_INSTR_SED,    .addr_mode = MOS_6502_ISA_ADDR_MODE_IMPLIED         },
    { .opcode = 0xF9, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_YINDEX },
    { .opcode = 0xFA, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xFB, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xFC, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          },
    { .opcode = 0xFD, .instr = MOS_6502_ISA_INSTR_SBC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xFE, .instr = MOS_6502_ISA_INSTR_INC,    .addr_mode = MOS_6502_ISA_ADDR_MODE_ABSOLUTE_XINDEX },
    { .opcode = 0xFF, .instr = MOS_6502_ISA_INSTR_UNUSED, .addr_mode = MOS_6502_ISA_ADDR_MODE_UNUSED          }
};

#endif